"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6889],{9813:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=n(4848),t=n(8453);const r={},a="Progress",o={permalink:"/blog/2024/08/15/index",editUrl:"https://github.com/raiment-studios/monorepo/tree/main/projects/raiment-studios/web2/blog/2024-08-15/index.md",source:"@site/blog/2024-08-15/index.md",title:"Progress",description:"Shading placeholder",date:"2024-08-15T00:00:00.000Z",tags:[],readingTime:1.56,hasTruncateMarker:!1,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"Incremental progress",permalink:"/blog/2024/08/16/index"},nextItem:{title:"WGPU progress",permalink:"/blog/2024/08/12/index"}},d={authorsImageUrls:[]},l=[{value:"Shading placeholder",id:"shading-placeholder",level:4},{value:"Voxels",id:"voxels",level:4},{value:"Bug! \ud83d\udc1b",id:"bug-",level:4},{value:"A larger model",id:"a-larger-model",level:4}];function c(e){const s={code:"code",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h4,{id:"shading-placeholder",children:"Shading placeholder"}),"\n",(0,i.jsx)(s.p,{children:"Added shading based on world coordinate positions. This was mostly a test of adding new uniforms and vertex shader outputs to the shader program."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"alt text",src:n(9190).A+"",width:"912",height:"740"})}),"\n",(0,i.jsx)(s.h4,{id:"voxels",children:"Voxels"}),"\n",(0,i.jsx)(s.p,{children:'Added a voxel model. Very inefficient at this point, but "correct."'}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"alt text",src:n(9244).A+"",width:"912",height:"740"})}),"\n",(0,i.jsx)(s.h4,{id:"bug-",children:"Bug! \ud83d\udc1b"}),"\n",(0,i.jsx)(s.p,{children:"Tried increasing the resolution and found bugs :)"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"alt text",src:n(7975).A+"",width:"912",height:"740"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Guess: missing array data?"})}),"\n",(0,i.jsx)(s.p,{children:"Manually counting the input data matches the generated positions array and checking against the runtime data..."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"4416 voxels * 6 faces/voxel * 8 positions/face => 105984 positiions"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"4416 voxels * 6 faces/voxel * 6 indices/face => 158976 indices"})}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"...seems correct."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Guess: too many draw calls?"})}),"\n",(0,i.jsx)(s.p,{children:"Seems impossible as this is a single mesh."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Investigation: is it always the same voxels that are missing?"})}),"\n",(0,i.jsx)(s.p,{children:"Flipping the order of the voxels during generation changes the missing voxels. Not sure what to conclude from this yet."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"alt text",src:n(7982).A+"",width:"912",height:"740"})}),"\n",(0,i.jsx)(s.p,{children:"Drawing just the Z+ face on the voxels seems to work correctly. The same seems to be true when rendering any one of the six faces."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"alt text",src:n(1073).A+"",width:"912",height:"740"})}),"\n",(0,i.jsx)(s.p,{children:"...but if as soon as 3 faces are rendered together, voxels seem to be lost."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Guess: too many indicies"})}),"\n",(0,i.jsxs)(s.p,{children:["Yup. The code is using ",(0,i.jsx)(s.code,{children:"u16"})," which has a max representable value of ",(0,i.jsx)(s.code,{children:"256*256 = 65,536"}),". There are ",(0,i.jsx)(s.code,{children:"158,976"})," indices."]}),"\n",(0,i.jsxs)(s.p,{children:["Changing to a ",(0,i.jsx)(s.code,{children:"u32"})," index buffer addresses the problem."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"alt text",src:n(8360).A+"",width:"912",height:"740"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Resolution"})}),"\n",(0,i.jsxs)(s.p,{children:["Bumping the render code to always use ",(0,i.jsx)(s.code,{children:"u32"})," seems fine for this stage of development. Using the larger buffer size affords more flexibility, which is a higher priority right now than optimization for memory or performance."]}),"\n",(0,i.jsxs)(s.p,{children:["Voxel chunking and optimizing away invisible faces need to be done regardless. After that is done, it should be easier to move back to a ",(0,i.jsx)(s.code,{children:"u16"})," index buffer."]}),"\n",(0,i.jsx)(s.h4,{id:"a-larger-model",children:"A larger model"}),"\n",(0,i.jsxs)(s.p,{children:["With the bug fixed, here's a sine + cosine generated voxel heightmap of ",(0,i.jsx)(s.code,{children:"128x128x32"})," resolution."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"alt text",src:n(2851).A+"",width:"912",height:"740"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},9244:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/image-1-b54b4c4c2bddf863a6a6bf4fa4742d08.png"},7975:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/image-2-68211a8923c91a217601ead4b72db9c4.png"},7982:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/image-3-94fa10ce7967f770d39bc35a2b0db19b.png"},1073:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/image-4-3340f0f0e4d6aeb1d53e80c014d1e2a6.png"},8360:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/image-5-50384b0c6cd604dc27521df09b01552b.png"},2851:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/image-6-c86cd101968dff730d604af6a62f54cf.png"},9190:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/image-a2021abeb66f43d42d42079ad1385771.png"},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var i=n(6540);const t={},r=i.createContext(t);function a(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);