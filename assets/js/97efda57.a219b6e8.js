"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5807],{8297:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>y,frontMatter:()=>p,metadata:()=>m,toc:()=>f});var s=n(4848),o=n(8453),r=n(6540);function i(e,t){void 0===t&&(t={});let n,s={id:Math.floor(1e20*Math.random()).toString(36).substring(0,8).padStart(8,"0")+Math.floor(1e20*Math.random()).toString(36).substring(0,8).padStart(8,"0"),title:"",status:"todo",notes:"",children:[],collapsed:!0,milestone:"",category:"",tags:[]};for((n=e.match(/^\s*x\s+/))&&(s.status="done",e=e.substring(n[0].length)),(n=e.match(/^\s*\[ \]\s+/))&&(s.status="todo",e=e.substring(n[0].length)),(n=e.match(/^\s*\[x\]\s+/))&&(s.status="done",e=e.substring(n[0].length)),((n=e.match(/^\s*\[!\]\s+/))||(n=e.match(/^\s*\[WIP\]\s+/)))&&(s.status=.5,e=e.substring(n[0].length)),(n=e.match(/^\s*\[-?>\]\s+/))&&(s.status="defer",e=e.substring(n[0].length)),(n=e.match(/^\s*DEFER\s+/))&&(s.status="defer",e=e.substring(n[0].length)),(n=e.match(/^\s*WIP\s+/))&&(s.status=.5,e=e.substring(n[0].length)),(n=(e=e.trimStart()).match(/^(>\s+)/))&&(s.collapsed=!0,e=e.substring(n[1].length));n=e.match(/@([^@\s]+)/);)e=e.substring(0,n.index)+e.substring(n.index+n[0].length).trim(),n[1].startsWith("M:")?s.milestone=n[1].substring(2):n[1].startsWith("C:")?s.category=n[1].substring(2):s.tags.push(n[1]);return s.title=e,t.title&&(s.title=t.title),t.status&&(s.status=t.status),t.status&&(s.status=t.status),t.children&&(s.children=t.children),t.notes&&(s.notes=t.notes),s.notes=s.notes.trim().split("\n").map((e=>"."===e.trim()?"":e)).join("\n"),s}function a(e){let{dataID:t}=e;const[n,o]=r.useState(null),[a,c]=r.useState(null);if(r.useEffect((()=>{const e=()=>{const n=document.querySelector(`.language-${t}`);if(!n)return void setTimeout(e,60);const s=n.innerText;c(function(e){const t={groups:[{name:"",rows:[]}],categories:[],milestones:[],tasks:[]};let n=[],s=null;const o=e.split("\n");let r=t.groups[t.groups.length-1],a=null;for(let l of o){let e;if(e=l.match(/^[^\s](.+)$/))if(e[0].startsWith("M:")){let t=e[0].substring(2).trim();a=t.length>0?t:null}else{let n=t.groups.find((t=>t.name===e[0].trim()));n||(n={name:e[0].trim(),rows:[]},t.groups.push(n),t.categories.push(e[0].trim())),r=n}else if(e=l.match(/^([\s]+)-(.+)$/)){let t=e[1].length,o=i(e[2]);a&&!o.milestone&&(o.milestone=a);let l=0,c=r.rows;for(;t>n[l];)c=c[c.length-1].children,l++;c.push(o),n[l]=t,s=o}else(e=l.match(/^([\s]+)([^-].+)$/))?s&&(s.notes+="\n"+e[2]):""===l.trim()?s&&(s.notes+="\n"):console.warn(l)}for(let i of t.groups){for(let e of i.rows)e.category||=i.name;t.tasks=t.tasks.concat(i.rows)}for(let i of t.tasks)i.milestone||(i.milestone=""),i.category||(i.category="Miscellaneous"),"done"===i.status&&""===i.milestone&&(i.milestone="Done");return t}(s))};e()}),[]),!a)return null;const h=function(e,t){const n=e=>{for(let s of e){if(s.id===t)return s;if(s.children.length>0){let e=n(s.children);if(e)return e}}return null};for(let s of e.groups){let e=n(s.rows);if(e)return e}return null}(a,n);return(0,s.jsxs)("div",{children:[(0,s.jsx)("style",{children:"\n                div.my-table-class {\n                    display: flex;\n                    flex-direction: column;\n                    margin: 0;\n                    width: 100%;\n                    border-collapse: collapse;\n\n\n                    .group {\n                        display: flex;\n                        flex-direction: column;\n\n                        >.group-name {\n                            font-weight: normal;\n                            font-size: 75%;\n                            text-transform: uppercase;\n                        }\n                    }\n\n                    .row {\n                        display: flex;\n                        padding: 2px 4px 2px;\n                        margin: 0;\n                        margin-left: 16px;\n                        align-items: center;\n\n                        .title {\n                            flex: 2 0 0;\n                        }\n                        .status {\n                            flex: 0 0 1.5rem;\n                        }\n\n\n                    }\n                    .row:hover {\n                        background: #ecedb9 !important;\n\n                        .expand-arrow {\n                            opacity: 1;\n                        }\n                    }\n\n                    .expand-arrow {\n                        font-size: 12px;\n                        opacity: 0.05;\n                        color: #888;\n                        cursor: pointer;\n                        margin-right: 4px;\n                    }\n                }\n            "}),(0,s.jsxs)("div",{style:{display:"flex",flexDirection:"row",padding:"16px 16px",borderRadius:8,border:"solid 1px #CCC",margin:"32px 0"},children:[(0,s.jsx)("div",{className:"my-table-class",style:{flex:"2 0 0"},children:(0,s.jsx)(l,{milestones:a.milestones,categories:a.categories,tasks:a.tasks,activeID:n,setActiveID:o})}),(0,s.jsx)("div",{style:{flex:"1 0 0"},children:(0,s.jsx)(d,{item:h})})]})]})}function l(e){let{milestones:t,categories:n,tasks:o,activeID:r,setActiveID:i}=e;const a=e=>e.toLowerCase().replace(/[^a-z0-9]/g,"").trim();for(let s of o){s.milestone||="",t.find((e=>a(e)===a(s.milestone)))||t.push(s.milestone)}return t=[...new Set(t)],t=t.sort(((e,t)=>(()=>{let n=["","Backlog","Done"],s=n.indexOf(e),o=n.indexOf(t);return-1===s?-1===o?e.localeCompare(t):-1:-1===o?1:-1})())),(0,s.jsx)(s.Fragment,{children:t.map(((e,t)=>(0,s.jsxs)("div",{style:{display:"flex",flexDirection:"column"},children:[(0,s.jsx)("div",{style:{},children:(0,s.jsx)("strong",{children:e||"Backlog"})}),(()=>{const t=o.filter((t=>a(t.milestone)===a(e)));return 0===t.length?null:(0,s.jsx)("div",{style:{marginLeft:16},children:(0,s.jsx)(c,{categories:n,tasks:t,activeID:r,setActiveID:i})})})()]},t)))})}function c(e){let{categories:t,tasks:n,activeID:o,setActiveID:r}=e;const i=e=>e.toLowerCase().replace(/[^a-z0-9]/g,"");for(let s of n){t.find((e=>i(e)===i(s.category)))||t.push(s.category)}return(0,s.jsx)(s.Fragment,{children:t.map(((e,a)=>{let l=n.filter((t=>i(t.category)===i(e)));return l.length>0?(0,s.jsxs)("div",{className:"group",children:[Object.keys(t).length>1&&(0,s.jsx)("div",{className:"group-name",children:e||"Backlog"}),l.map(((e,t)=>(0,s.jsx)(h,{options:{showCategory:!1,showMilestone:!1},row:e,activeID:o,setActiveID:r},e.id)))]},a):null}))})}function d(e){let{item:t}=e;const n=(t?.notes??"").split("\n\n").map((e=>e.trim()));return t&&(0,s.jsxs)("div",{style:{fontSize:"85%"},children:[(0,s.jsx)("div",{style:{borderBottom:"solid 1px #CCC",marginBottom:16},children:"Description"}),(0,s.jsx)("div",{style:{lineHeight:1.2},children:n.map(((e,t)=>(0,s.jsx)("div",{style:{marginBottom:8},children:e},t)))})]})}function h(e){let{row:t,activeID:n,setActiveID:o,depth:i=0,options:a={showCategory:!0}}=e;const[l,c]=function(e,t){const[n,s]=r.useState((()=>{try{const n=localStorage.getItem(e);return null!==n?JSON.parse(n):t}catch(n){return console.error("Error loading data from local storage:",n),t}}));return[n,t=>{try{const o=t instanceof Function?t(n):t;s(o),localStorage.setItem(e,JSON.stringify(o))}catch(o){console.error("Error saving data to local storage:",o)}}]}(`v3:${t.title}`,!t.collapsed);return a=Object.assign({showCategory:!0,showMilestone:!0},a),(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{className:"row",style:{color:"defer"===t.status?"#AAA":"inherit",backgroundColor:t.id===n?"#4d0bc011":"inherit",borderRadius:10,fontSize:100-Math.min(10*i,50)+"%"},onClick:()=>o(t.id),children:[(0,s.jsx)("div",{className:"expand-arrow",style:{opacity:t.children.length>0?.5:.05,transform:l?"rotate(90deg)":"none"},onClick:()=>c(!l),children:"\u25b6"}),(0,s.jsx)("div",{className:"status",children:"done"===t.status?(0,s.jsx)("div",{style:{width:12,height:12,background:"#06a306",borderRadius:"50%"}}):"number"==typeof t.status&&t.status<1?(0,s.jsx)("div",{style:{width:12,height:12,border:"solid 1px #555",borderRadius:"50%",background:"conic-gradient(\n                                    #fff 0% 50%, \n                                    #06a306 50% 100% \n                                  )"}}):"todo"===t.status?(0,s.jsx)("div",{style:{width:12,height:12,border:"solid 1px #555",borderRadius:"50%"}}):"defer"===t.status?(0,s.jsx)("div",{style:{fontSize:12},children:"\u2192"}):t.status}),(0,s.jsx)("div",{className:"title",style:{textDecoration:"defer"===t.status?"line-through":"none",margin:"2px 0 0px",display:"flex",flexDirection:"column"},children:(0,s.jsxs)("div",{style:{display:"flex",flexDirection:"row",alignItems:"center"},children:[(0,s.jsx)("div",{style:{lineHeight:1.05},children:t.title}),t.notes?.trim().length>0&&(0,s.jsx)("div",{style:{fontSize:10,filter:"grayscale(100%)",opacity:.75,paddingLeft:4},children:"\ud83d\uddd2"})]})})]}),(0,s.jsxs)("div",{style:{marginLeft:58,fontSize:"70%",lineHeight:1,minHeight:6,opacity:.5,marginTop:-2},children:[a.showMilestone&&t.milestone&&(0,s.jsx)("span",{style:{display:"inline-block",color:"#a51f1f",padding:"0px 2px",margin:"0px 4px 0 0"},children:t.milestone}),a.showCategory&&t.category&&(0,s.jsx)("span",{style:{display:"inline-block",color:"#a56d1f",padding:"0px 2px",margin:"0px 4px 0 0"},children:t.category}),t.tags.length>0&&t.tags.map(((e,t)=>(0,s.jsx)("span",{style:{display:"inline-block",color:"#888",padding:"0px 2px",margin:"0px 4px 0 0"},children:e},t)))]}),t.children.length>0&&l&&(0,s.jsx)("div",{style:{marginLeft:32},children:t.children.map(((e,t)=>(0,s.jsx)(h,{row:e,activeID:n,setActiveID:o,depth:i+1,options:a},t)))})]})}const p={},u="Snowscape",m={id:"snowfall/roadmap/snowscape",title:"Snowscape",description:"The Snowscape engine (which this roadmap is primarily focused on at the moment) is a custom voxel rendering engine motivated by learning WGPU and Rust. Intended to be a voxel engine specifically for the requirements of Snowfall, not a general game engine (like Bevy, for example).",source:"@site/docs/snowfall/150-roadmap/151-snowscape.mdx",sourceDirName:"snowfall/150-roadmap",slug:"/snowfall/roadmap/snowscape",permalink:"/docs/snowfall/roadmap/snowscape",draft:!1,unlisted:!1,editUrl:"https://github.com/raiment-studios/monorepo/tree/main/projects/raiment-studios/web2/docs/snowfall/150-roadmap/151-snowscape.mdx",tags:[],version:"current",sidebarPosition:151,frontMatter:{},sidebar:"snowfallSidebar",previous:{title:"Design Doc",permalink:"/docs/snowfall/"},next:{title:"Snowfield",permalink:"/docs/snowfall/roadmap/snowfield"}},g={},f=[{value:"v0.0 (wip)",id:"v00-wip",level:2}];function x(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"snowscape",children:"Snowscape"})}),"\n",(0,s.jsx)(t.p,{children:"The Snowscape engine (which this roadmap is primarily focused on at the moment) is a custom voxel rendering engine motivated by learning WGPU and Rust. Intended to be a voxel engine specifically for the requirements of Snowfall, not a general game engine (like Bevy, for example)."}),"\n",(0,s.jsx)(t.h2,{id:"v00-wip",children:"v0.0 (wip)"}),"\n",(0,s.jsxs)(t.p,{children:["While scope creep is a concern, ",(0,s.jsx)(t.strong,{children:"v0.0"})," is more of an exploration of getting a basic\nengine going, rather than a specific MVP target."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-data-v0_0",children:"\nM:v0.0\nEngine\n    - [ ] Add voxel sprites @C:rendering\n    - [ ] Add basic gravity @C:engine\n        - [ ] Add basic gravity to the camera only\n        - [ ] Reset force on each frame\n        - [ ] Check and clamp movement\n\n\nM:v0.1\n    - [ ] Prototype sound @C:engine\n\nM:\nContent\n    - [x] Voxel house\n    - [x] Terrain with sand, grass, and snow\n        - x Use scriptlib described below\n\nContent support\n    - [x] Generate models from TypeScript/JavaScript\n        - [x] With arbitrary JSON parameters\n        - DEFER Cache results based on source+parameters hash\n    - [!] Generate models from Rust 'scripts'\n        - [x] Setup 'scriptlib' for scripts to link to\n        - [x] Support noise functions in scriptlib\n        - [x] Add color to generator script\n        - [x] Add bitcode support (for performance)\n\n            Use a binary format for transfering lots of data (rather than YAML).\n\n            Use some sort of structured communication rather than STDOUT? Or at\n            least test if that is needed or if STDOUT with a structured binary\n            format would be sufficient.\n\n        - [ ] Make VoxelBuilder utility class\n            - [ ] Cursor\n        - [ ] Generator output format that's exclusively for generators\n            Binary with meta fields to specify the format of the data.\n\n            Optional fields, etc.\n\n    - [x] Load VOX models\n    - [x] Hot reloading of assets\n\nEngine\n    - [x] Decompose State object\n    - [x] Decouple input from Actions\n    - [x] Basic camera controls\n    - [ ] Procedural region generation\n    - [>] Modifiable voxel models\n    - [>] Basic physics\n    - [ ] Chunking\n\nRendering\n    - x Shade voxels based on world coord\n    - Add FPS counter\n\nMisc\n    - [ ] Add dynamic villages @M:v0.5 @C:gameplay\n        - [ ] Set of houses @C:content\n            - [ ] Add house 1\n            - [ ] Add house 2\n            - [ ] Add house 3\n        - [ ] Blend houses with terrain @novel\n    - [ ] Add UI\n    - [ ] Add intro screen\n    - [ ] Add ability to save the game\n    - [ ] Add Farmer NPC @npc\n          A Farmer NPC reserves a plot of land with room for a\n          rectangular field and a farmhouse. They flatten the\n          terrain for both. They construct the house and convert\n          the terrain to dirt.  They put a fence around the field.\n          They plant seeds in the dirt. They then become a resident\n          who ends the farmhouse and exits every once in a while\n          to maintain the field (flatten terrain, repair the fence,\n          pick crops, plant seeds, etc).\n    - [ ] Document that NPCs do not age @documentation\n          Due to the game's time scale, there's no need for NPCs to\n          age. This reduces the complexity of the game and tightens\n          the scope.\n    - [ ] Lighting\n    - [ ] Shadows\n    - [ ] Scripting\n    - [ ] Dependency list -> dependency graph\n    - [ ] Better script data exchange\n\n"})}),"\n",(0,s.jsx)(a,{dataID:"data-v0_0"})]})}function y(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(6540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);