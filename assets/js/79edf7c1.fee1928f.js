"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8905],{9077:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=s(4848),t=s(8453);const a={},r="Task schema",l={id:"guidebook/reference/task-schema",title:"Task schema",description:"This is a somewhat exhaustive set of notes on possible fields in a Task schema.",source:"@site/docs/guidebook/700-reference/705-task-schema.md",sourceDirName:"guidebook/700-reference",slug:"/guidebook/reference/task-schema",permalink:"/docs/guidebook/reference/task-schema",draft:!1,unlisted:!1,editUrl:"https://github.com/raiment-studios/monorepo/tree/main/projects/raiment-studios/web2/docs/guidebook/700-reference/705-task-schema.md",tags:[],version:"current",sidebarPosition:705,frontMatter:{},sidebar:"guidebookSidebar",previous:{title:"Effective communication",permalink:"/docs/guidebook/reference/effective-communication"}},o={},d=[{value:"Core schema",id:"core-schema",level:2},{value:"value",id:"value",level:3},{value:"children",id:"children",level:3},{value:"order",id:"order",level:3},{value:"uuid",id:"uuid",level:3},{value:"name",id:"name",level:3},{value:"Status",id:"status",level:2},{value:"status",id:"status-1",level:3},{value:"ready",id:"ready",level:3},{value:"progress",id:"progress",level:3},{value:"Definition",id:"definition",level:2},{value:"description",id:"description",level:3},{value:"definition of done",id:"definition-of-done",level:3},{value:"success criteria",id:"success-criteria",level:3},{value:"Categorization",id:"categorization",level:2},{value:"tags",id:"tags",level:3},{value:"attributes",id:"attributes",level:3},{value:"Collaboration",id:"collaboration",level:2},{value:"comments",id:"comments",level:3},{value:"history",id:"history",level:3},{value:"Roadmap related",id:"roadmap-related",level:2},{value:"priority",id:"priority",level:3},{value:"dependencies",id:"dependencies",level:3},{value:"deadline",id:"deadline",level:3},{value:"milestone",id:"milestone",level:3},{value:"release",id:"release",level:3},{value:"project",id:"project",level:3},{value:"category",id:"category",level:3},{value:"component",id:"component",level:3},{value:"Estimation related",id:"estimation-related",level:2},{value:"effort",id:"effort",level:3},{value:"confidence",id:"confidence",level:3},{value:"reach",id:"reach",level:3},{value:"impact",id:"impact",level:3},{value:"Risk assessment",id:"risk-assessment",level:2},{value:"risk",id:"risk",level:3},{value:"mitigation",id:"mitigation",level:3}];function c(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"task-schema",children:"Task schema"})}),"\n",(0,n.jsxs)(i.p,{children:["This is a somewhat exhaustive set of notes on ",(0,n.jsx)(i.em,{children:"possible"})," fields in a ",(0,n.jsx)(i.code,{children:"Task"})," schema."]}),"\n",(0,n.jsx)(i.p,{children:'As many fields have imprecise and potentially overlapping definitions, the particular names used below are arbitrary to a degree. For example, it\'s easy to argue that a field called "release" could be called "milestone" instead; such arguments are avoided altogether in these notes.'}),"\n",(0,n.jsxs)(i.p,{children:["Guidebook likely ",(0,n.jsx)(i.em,{children:"should not"})," support all of these fields as a more complex schema is likely to work against the design goal of a minimal, lightweight user-experience (unless this can be done all under the hood in a way does not complicate the app usage)."]}),"\n",(0,n.jsx)(i.admonition,{title:"Not yet accounted for",type:"info",children:(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Backlog"}),"\n",(0,n.jsx)(i.li,{children:"Archived, Deleted"}),"\n",(0,n.jsx)(i.li,{children:"Deferred"}),"\n",(0,n.jsx)(i.li,{children:"Duplicate tasks"}),"\n",(0,n.jsx)(i.li,{children:"Feedback, Wishlist"}),"\n"]})}),"\n",(0,n.jsx)(i.h2,{id:"core-schema",children:"Core schema"}),"\n",(0,n.jsx)(i.h3,{id:"value",children:"value"}),"\n",(0,n.jsx)(i.p,{children:"The text of the task."}),"\n",(0,n.jsxs)(i.p,{children:["Alternately could be called ",(0,n.jsx)(i.code,{children:"name"})," or ",(0,n.jsx)(i.code,{children:"title"})," depending on the context and interpretation."]}),"\n",(0,n.jsx)(i.h3,{id:"children",children:"children"}),"\n",(0,n.jsx)(i.p,{children:"Subtasks. Potentially infinitely recursive."}),"\n",(0,n.jsx)(i.h3,{id:"order",children:"order"}),"\n",(0,n.jsx)(i.p,{children:"The natural order given to the tasks when presented in a list. This is often an implicit value based on the storage of the children."}),"\n",(0,n.jsx)(i.h3,{id:"uuid",children:"uuid"}),"\n",(0,n.jsx)(i.p,{children:"A universally unique ID for the task"}),"\n",(0,n.jsx)(i.p,{children:"Allows for permalinks and other content-agnostic references."}),"\n",(0,n.jsx)(i.h3,{id:"name",children:"name"}),"\n",(0,n.jsxs)(i.p,{children:["A human-friendly unique ID as an addition or alternative to ",(0,n.jsx)(i.a,{href:"#uuid",children:(0,n.jsx)(i.code,{children:"uuid"})}),". Making it human-friendly may make it more difficult to ensure uniqueness."]}),"\n",(0,n.jsx)(i.p,{children:"Another complication is if the task changes in such a way that the name is no longer apt. Should the task be allowed to have multiple names? If the task changed that much, should the old task be archived and a new one created?"}),"\n",(0,n.jsx)(i.h2,{id:"status",children:"Status"}),"\n",(0,n.jsx)(i.h3,{id:"status-1",children:"status"}),"\n",(0,n.jsxs)(i.p,{children:["At it's core, has two values: ",(0,n.jsx)(i.strong,{children:"todo"})," or ",(0,n.jsx)(i.strong,{children:"done"})," via a simple checklist metaphor."]}),"\n",(0,n.jsxs)(i.p,{children:["Could be expanded to have a ",(0,n.jsx)(i.strong,{children:"work-in-progress"})," value."]}),"\n",(0,n.jsx)(i.p,{children:"The set of values could easily expand to others such as:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:'"deferred"'}),"\n",(0,n.jsx)(i.li,{children:'"archived"'}),"\n",(0,n.jsx)(i.li,{children:'"won\'t fix"'}),"\n",(0,n.jsx)(i.li,{children:'"as designed"'}),"\n",(0,n.jsx)(i.li,{children:'"needs design"'}),"\n",(0,n.jsx)(i.li,{children:'"needs priorization"'}),"\n",(0,n.jsx)(i.li,{children:'"not fixed"'}),"\n",(0,n.jsx)(i.li,{children:'"not ready"'}),"\n",(0,n.jsx)(i.li,{children:'"unconfirmed"'}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:'A larger list increases risk of overlapping semantics which makes it more difficult for users to know which status is right, i.e. more values can make the problem of what status is correct "under-constrained." Inconsistent categorization then makes the categorization less useful as other users have lower confidence in searches, filters, and reports on a given status as it may miss items they would have expected to find.'}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"status"}),' may also have a workflow, i.e. "todo" -> "work in progress" -> "done". The status transitions may be fixed and not all transitions should be allowed. These transitions might also be a place where gating or approvals must occur to ensure steps are not skipped.']}),"\n",(0,n.jsx)(i.h3,{id:"ready",children:"ready"}),"\n",(0,n.jsx)(i.p,{children:"A single boolean indicating that a task has been confirmed, vetted, or otherwise approved and is ready to be worked on."}),"\n",(0,n.jsx)(i.p,{children:"This might be used for:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Tasks that are ",(0,n.jsx)(i.em,{children:"requests"})," that have not yet been prioritized by a Product Manager"]}),"\n",(0,n.jsx)(i.li,{children:"Tasks that require design-work (UX, visual, engineering, etc.) before they can be started"}),"\n",(0,n.jsx)(i.li,{children:"Tasks that represent bugs that should be verified and prioritized before work is done on them"}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Readiness overlaps with ",(0,n.jsx)(i.a,{href:"#priority",children:(0,n.jsx)(i.code,{children:"priority"})})," as implicitly an unready task should be of lowest effective priority and any priority recorded on the task only represents its priority ",(0,n.jsx)(i.em,{children:"when it is ready"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["Readiness is also arguably a ",(0,n.jsx)(i.a,{href:"#status",children:(0,n.jsx)(i.code,{children:"status"})}),' that precedes "todo".']}),"\n",(0,n.jsx)(i.h3,{id:"progress",children:"progress"}),"\n",(0,n.jsxs)(i.p,{children:["Percent done. Semantically overlaps with ",(0,n.jsx)(i.a,{href:"#status",children:(0,n.jsx)(i.code,{children:"status"})}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsx)(i.h3,{id:"description",children:"description"}),"\n",(0,n.jsx)(i.p,{children:"A long-form description of the task to be done. This in itself theoretically could have a schema."}),"\n",(0,n.jsx)(i.h3,{id:"definition-of-done",children:"definition of done"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"definition of done"})," is distinct from ",(0,n.jsx)(i.a,{href:"#success-criteria",children:(0,n.jsx)(i.code,{children:"success criteria"})})," in that it only represents if the agreed upon work was ",(0,n.jsx)(i.em,{children:"completed"}),", not that the anticipated outcome or impact was realized by the task being done."]}),"\n",(0,n.jsx)(i.p,{children:'This might also be called "acceptance criteria."'}),"\n",(0,n.jsx)(i.h3,{id:"success-criteria",children:"success criteria"}),"\n",(0,n.jsx)(i.h2,{id:"categorization",children:"Categorization"}),"\n",(0,n.jsx)(i.h3,{id:"tags",children:"tags"}),"\n",(0,n.jsx)(i.p,{children:"A set of values."}),"\n",(0,n.jsx)(i.p,{children:"Considerations:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Case-sensitivity"}),"\n",(0,n.jsxs)(i.li,{children:["Valid characters (e.g. ",(0,n.jsx)(i.code,{children:"#"}),", ",(0,n.jsx)(i.code,{children:"_"}),", whitespace, etc.)"]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"attributes",children:"attributes"}),"\n",(0,n.jsx)(i.p,{children:"A set of key-value pairs."}),"\n",(0,n.jsx)(i.p,{children:"Considerations:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Are values always strings? Only simple types? Objects with unbounded nesting?"}),"\n",(0,n.jsx)(i.li,{children:"Are empty values allowed?"}),"\n",(0,n.jsx)(i.li,{children:"Are attributes allowed in addition to tags? Or are tags simply a special-case of attributes?"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"collaboration",children:"Collaboration"}),"\n",(0,n.jsx)(i.h3,{id:"comments",children:"comments"}),"\n",(0,n.jsx)(i.h3,{id:"history",children:"history"}),"\n",(0,n.jsx)(i.h2,{id:"roadmap-related",children:"Roadmap related"}),"\n",(0,n.jsx)(i.h3,{id:"priority",children:"priority"}),"\n",(0,n.jsx)(i.p,{children:"P0, P1, P2, P3, P4, P5"}),"\n",(0,n.jsx)(i.h3,{id:"dependencies",children:"dependencies"}),"\n",(0,n.jsx)(i.p,{children:"Other tasks that must be complete before this task can be completed."}),"\n",(0,n.jsx)(i.h3,{id:"deadline",children:"deadline"}),"\n",(0,n.jsxs)(i.p,{children:['A "must finish by" date that is agnostic of the effort. A more specific field such as ',(0,n.jsx)(i.a,{href:"#release",children:(0,n.jsx)(i.code,{children:"release"})})," would subsume such a field."]}),"\n",(0,n.jsx)(i.h3,{id:"milestone",children:"milestone"}),"\n",(0,n.jsx)(i.h3,{id:"release",children:"release"}),"\n",(0,n.jsx)(i.p,{children:"A grouping attribute that aligns the task to a specific deadline. That deadline is not necessarily the deadline of the individual task, only that the task's own deadline must before or on the deadline of the release."}),"\n",(0,n.jsx)(i.h3,{id:"project",children:"project"}),"\n",(0,n.jsxs)(i.p,{children:["A grouping around a particular, on-going or otherwise long-lasting effort. This could also be a ",(0,n.jsx)(i.code,{children:"product"})," field. This is distinct from ",(0,n.jsx)(i.a,{href:"#release",children:(0,n.jsx)(i.code,{children:"release"})})," in that there is no a distinct deadline associated with this categorization."]}),"\n",(0,n.jsxs)(i.p,{children:["Could be handled as a ",(0,n.jsx)(i.a,{href:"#tags",children:(0,n.jsx)(i.code,{children:"tags"})})," value unless the UI/UX has specific semantic knowledge of what a project is."]}),"\n",(0,n.jsx)(i.h3,{id:"category",children:"category"}),"\n",(0,n.jsx)(i.p,{children:"A generic grouping. A task can only have a single category."}),"\n",(0,n.jsx)(i.h3,{id:"component",children:"component"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.em,{children:"implementation area"}),' of the task. For example, "Rendering Subsystem" or "Storage Layer" might be components.']}),"\n",(0,n.jsx)(i.p,{children:"Consideration:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Should this be a an attribute rather than a core field?"}),"\n",(0,n.jsx)(i.li,{children:"Are multiple components allowed?"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"estimation-related",children:"Estimation related"}),"\n",(0,n.jsx)(i.h3,{id:"effort",children:"effort"}),"\n",(0,n.jsx)(i.p,{children:"An estimate of how long a task will take."}),"\n",(0,n.jsx)(i.p,{children:'This can get nuanced for larger tasks as a single number may bake in assumptions about the team size that\'s working on it, the fraction of that team\'s time, the expertise of the people working on the task, etc. Is this a "perfect" estimate (imagine everyone is fully focussed and has the expertise to do the work)? Or are these "real" estimates (the calendar time it will take given all the estimators assumptions about the reality around the task)?'}),"\n",(0,n.jsx)(i.p,{children:"If the value bakes in implicit assumptions such as the above, it can require training from users to avoid errors."}),"\n",(0,n.jsx)(i.h3,{id:"confidence",children:"confidence"}),"\n",(0,n.jsx)(i.p,{children:"How much risk is there? Is this a straightforward task that has been done many times and is just a matter of time to complete? Or is this a novel task that might not be possible, might have a poor estimate, might not have the value anticipated?"}),"\n",(0,n.jsx)(i.h3,{id:"reach",children:"reach"}),"\n",(0,n.jsxs)(i.p,{children:["If this task is done, how big will be impacted? Does it affect all users of a product? This is distinct from ",(0,n.jsx)(i.a,{href:"#impact",children:(0,n.jsx)(i.code,{children:"impact"})})," as it should only account for ",(0,n.jsx)(i.em,{children:"how many"})," not ",(0,n.jsx)(i.em,{children:"how much"}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"impact",children:"impact"}),"\n",(0,n.jsxs)(i.p,{children:["What is the value of the task being done? This is distinct from ",(0,n.jsx)(i.a,{href:"#reach",children:(0,n.jsx)(i.code,{children:"reach"})})," as a task that's highly valuable only to a few people is still high impact. This is why ",(0,n.jsx)(i.code,{children:"reach x impact"})," is a better metric for overall importance."]}),"\n",(0,n.jsx)(i.h2,{id:"risk-assessment",children:"Risk assessment"}),"\n",(0,n.jsx)(i.h3,{id:"risk",children:"risk"}),"\n",(0,n.jsxs)(i.p,{children:["A concrete line item of something that could go wrong along with some form of ",(0,n.jsx)(i.strong,{children:"high"}),", ",(0,n.jsx)(i.strong,{children:"medium"}),", ",(0,n.jsx)(i.strong,{children:"low"})," metric. Usually a qualitative metric rather than numeric probability is fine as the intent usually more for planning and communication than quantitative analysis."]}),"\n",(0,n.jsxs)(i.p,{children:["Should be paired with a ",(0,n.jsx)(i.a,{href:"#mitigation",children:(0,n.jsx)(i.code,{children:"mitigation"})})," task to reduce the risk. If it's not worth associating a risk with a mitigation, then arguably it's not worth calling out the risk."]}),"\n",(0,n.jsx)(i.h3,{id:"mitigation",children:"mitigation"}),"\n",(0,n.jsx)(i.p,{children:"A task or set of tasks that are being done to either:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsx)(i.li,{children:"Front-load the risk in the broader project so it will be clear if it is actuated or not"}),"\n",(0,n.jsx)(i.li,{children:"Reduce the cost/impact of the risk if it is actuated"}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>r,x:()=>l});var n=s(6540);const t={},a=n.createContext(t);function r(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);