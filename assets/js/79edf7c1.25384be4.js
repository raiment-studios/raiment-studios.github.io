"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8905],{9077:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=s(4848),t=s(8453);const a={},r="Task schema",o={id:"guidebook/reference/task-schema",title:"Task schema",description:"This is a somewhat exhaustive set of notes on possible fields in a Task schema.",source:"@site/docs/guidebook/700-reference/705-task-schema.md",sourceDirName:"guidebook/700-reference",slug:"/guidebook/reference/task-schema",permalink:"/docs/guidebook/reference/task-schema",draft:!1,unlisted:!1,editUrl:"https://github.com/raiment-studios/monorepo/tree/main/projects/raiment-studios/web2/docs/guidebook/700-reference/705-task-schema.md",tags:[],version:"current",sidebarPosition:705,frontMatter:{},sidebar:"guidebookSidebar",previous:{title:"Effective communication",permalink:"/docs/guidebook/reference/effective-communication"}},l={},d=[{value:"Core schema",id:"core-schema",level:2},{value:"value",id:"value",level:3},{value:"children",id:"children",level:3},{value:"order",id:"order",level:3},{value:"uuid",id:"uuid",level:3},{value:"name",id:"name",level:3},{value:"Status",id:"status",level:2},{value:"status",id:"status-1",level:3},{value:"ready",id:"ready",level:3},{value:"progress",id:"progress",level:3},{value:"Definition",id:"definition",level:2},{value:"description",id:"description",level:3},{value:"definition of done",id:"definition-of-done",level:3},{value:"success criteria",id:"success-criteria",level:3},{value:"Categorization",id:"categorization",level:2},{value:"tags",id:"tags",level:3},{value:"attributes",id:"attributes",level:3},{value:"Collaboration",id:"collaboration",level:2},{value:"creator",id:"creator",level:3},{value:"assignee",id:"assignee",level:3},{value:"consultees",id:"consultees",level:3},{value:"informees",id:"informees",level:3},{value:"comments",id:"comments",level:3},{value:"history",id:"history",level:3},{value:"Roadmap related",id:"roadmap-related",level:2},{value:"priority",id:"priority",level:3},{value:"dependencies",id:"dependencies",level:3},{value:"links",id:"links",level:3},{value:"deadline",id:"deadline",level:3},{value:"category",id:"category",level:3},{value:"project",id:"project",level:3},{value:"milestone",id:"milestone",level:3},{value:"release",id:"release",level:3},{value:"subsystem",id:"subsystem",level:3},{value:"Estimation related",id:"estimation-related",level:2},{value:"effort",id:"effort",level:3},{value:"confidence",id:"confidence",level:3},{value:"reach",id:"reach",level:3},{value:"impact",id:"impact",level:3},{value:"Risk assessment",id:"risk-assessment",level:2},{value:"risk",id:"risk",level:3},{value:"mitigation",id:"mitigation",level:3}];function c(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",section:"section",strong:"strong",sup:"sup",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"task-schema",children:"Task schema"})}),"\n",(0,n.jsxs)(i.p,{children:["This is a somewhat exhaustive set of notes on ",(0,n.jsx)(i.em,{children:"possible"})," fields in a ",(0,n.jsx)(i.code,{children:"Task"})," schema."]}),"\n",(0,n.jsx)(i.p,{children:'As many fields have imprecise and potentially overlapping definitions, the particular names used below are arbitrary to a degree. For example, it\'s easy to argue that a field called "release" could be called "milestone" instead; such arguments are avoided altogether in these notes.'}),"\n",(0,n.jsxs)(i.p,{children:["Guidebook likely ",(0,n.jsx)(i.em,{children:"should not"})," support all of these fields as a more complex schema is likely to work against the design goal of a minimal, lightweight user-experience (unless this can be done all under the hood in a way does not complicate the app usage)."]}),"\n",(0,n.jsx)(i.admonition,{title:"Not yet accounted for",type:"info",children:(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Backlog"}),"\n",(0,n.jsx)(i.li,{children:"Archived, Deleted"}),"\n",(0,n.jsx)(i.li,{children:"Deferred"}),"\n",(0,n.jsx)(i.li,{children:"Duplicate tasks"}),"\n",(0,n.jsx)(i.li,{children:"Feedback, Wishlist"}),"\n"]})}),"\n",(0,n.jsx)(i.h2,{id:"core-schema",children:"Core schema"}),"\n",(0,n.jsx)(i.h3,{id:"value",children:"value"}),"\n",(0,n.jsx)(i.p,{children:"The text of the task."}),"\n",(0,n.jsxs)(i.p,{children:["Alternately could be called ",(0,n.jsx)(i.code,{children:"name"})," or ",(0,n.jsx)(i.code,{children:"title"})," depending on the context and interpretation."]}),"\n",(0,n.jsx)(i.h3,{id:"children",children:"children"}),"\n",(0,n.jsx)(i.p,{children:"Subtasks. Potentially infinitely recursive."}),"\n",(0,n.jsx)(i.h3,{id:"order",children:"order"}),"\n",(0,n.jsx)(i.p,{children:"The natural order given to the tasks when presented in a list. This is often an implicit value based on the storage of the children."}),"\n",(0,n.jsx)(i.h3,{id:"uuid",children:"uuid"}),"\n",(0,n.jsx)(i.p,{children:"A universally unique ID for the task"}),"\n",(0,n.jsx)(i.p,{children:"Allows for permalinks and other content-agnostic references."}),"\n",(0,n.jsx)(i.h3,{id:"name",children:"name"}),"\n",(0,n.jsxs)(i.p,{children:["A human-friendly unique ID as an addition or alternative to ",(0,n.jsx)(i.a,{href:"#uuid",children:(0,n.jsx)(i.code,{children:"uuid"})}),". Making it human-friendly may make it more difficult to ensure uniqueness."]}),"\n",(0,n.jsx)(i.p,{children:"Another complication is if the task changes in such a way that the name is no longer apt. Should the task be allowed to have multiple names? If the task changed that much, should the old task be archived and a new one created?"}),"\n",(0,n.jsx)(i.h2,{id:"status",children:"Status"}),"\n",(0,n.jsx)(i.h3,{id:"status-1",children:"status"}),"\n",(0,n.jsxs)(i.p,{children:["At it's core, has two values: ",(0,n.jsx)(i.strong,{children:"todo"})," or ",(0,n.jsx)(i.strong,{children:"done"})," via a simple checklist metaphor."]}),"\n",(0,n.jsxs)(i.p,{children:["Could be expanded to have a ",(0,n.jsx)(i.strong,{children:"work-in-progress"})," value."]}),"\n",(0,n.jsx)(i.p,{children:"The set of values could easily expand to others such as:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:'"deferred"'}),"\n",(0,n.jsx)(i.li,{children:'"archived"'}),"\n",(0,n.jsx)(i.li,{children:'"won\'t fix"'}),"\n",(0,n.jsx)(i.li,{children:'"as designed"'}),"\n",(0,n.jsx)(i.li,{children:'"needs design"'}),"\n",(0,n.jsx)(i.li,{children:'"needs priorization"'}),"\n",(0,n.jsx)(i.li,{children:'"not fixed"'}),"\n",(0,n.jsx)(i.li,{children:'"not ready"'}),"\n",(0,n.jsx)(i.li,{children:'"unconfirmed"'}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:'A larger list increases risk of overlapping semantics which makes it more difficult for users to know which status is right, i.e. more values can make the problem of what status is correct "under-constrained." Inconsistent categorization then makes the categorization less useful as other users have lower confidence in searches, filters, and reports on a given status as it may miss items they would have expected to find.'}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"status"}),' may also have a workflow, i.e. "todo" -> "work in progress" -> "done". The status transitions may be fixed and not all transitions should be allowed. These transitions might also be a place where gating or approvals must occur to ensure steps are not skipped.']}),"\n",(0,n.jsx)(i.h3,{id:"ready",children:"ready"}),"\n",(0,n.jsx)(i.p,{children:"A single boolean indicating that a task has been confirmed, vetted, or otherwise approved and is ready to be worked on."}),"\n",(0,n.jsx)(i.p,{children:"This might be used for:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Tasks that are ",(0,n.jsx)(i.em,{children:"requests"})," that have not yet been prioritized by a Product Manager"]}),"\n",(0,n.jsx)(i.li,{children:"Tasks that require design-work (UX, visual, engineering, etc.) before they can be started"}),"\n",(0,n.jsx)(i.li,{children:"Tasks that represent bugs that should be verified and prioritized before work is done on them"}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Readiness overlaps with ",(0,n.jsx)(i.a,{href:"#priority",children:(0,n.jsx)(i.code,{children:"priority"})})," as implicitly an unready task should be of lowest effective priority and any priority recorded on the task only represents its priority ",(0,n.jsx)(i.em,{children:"when it is ready"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["Readiness is also arguably a ",(0,n.jsx)(i.a,{href:"#status",children:(0,n.jsx)(i.code,{children:"status"})}),' that precedes "todo".']}),"\n",(0,n.jsx)(i.h3,{id:"progress",children:"progress"}),"\n",(0,n.jsxs)(i.p,{children:["Percent done. Semantically overlaps with ",(0,n.jsx)(i.a,{href:"#status",children:(0,n.jsx)(i.code,{children:"status"})}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsx)(i.h3,{id:"description",children:"description"}),"\n",(0,n.jsx)(i.p,{children:"A long-form description of the task to be done. This in itself theoretically could have a schema."}),"\n",(0,n.jsx)(i.h3,{id:"definition-of-done",children:"definition of done"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"definition of done"})," is distinct from ",(0,n.jsx)(i.a,{href:"#success-criteria",children:(0,n.jsx)(i.code,{children:"success criteria"})})," in that it only represents if the agreed upon work was ",(0,n.jsx)(i.em,{children:"completed"}),", not that the anticipated outcome or impact was realized by the task being done."]}),"\n",(0,n.jsx)(i.p,{children:'This might also be called "acceptance criteria."'}),"\n",(0,n.jsx)(i.h3,{id:"success-criteria",children:"success criteria"}),"\n",(0,n.jsx)(i.h2,{id:"categorization",children:"Categorization"}),"\n",(0,n.jsx)(i.h3,{id:"tags",children:"tags"}),"\n",(0,n.jsx)(i.p,{children:"A set of values."}),"\n",(0,n.jsx)(i.p,{children:"Considerations:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Case-sensitivity"}),"\n",(0,n.jsxs)(i.li,{children:["Valid characters (e.g. ",(0,n.jsx)(i.code,{children:"#"}),", ",(0,n.jsx)(i.code,{children:"_"}),", whitespace, etc.)"]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"attributes",children:"attributes"}),"\n",(0,n.jsx)(i.p,{children:"A set of key-value pairs."}),"\n",(0,n.jsx)(i.p,{children:"Considerations:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Are values always strings? Only simple types? Objects with unbounded nesting?"}),"\n",(0,n.jsx)(i.li,{children:"Are empty values allowed?"}),"\n",(0,n.jsx)(i.li,{children:"Are attributes allowed in addition to tags? Or are tags simply a special-case of attributes?"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"collaboration",children:"Collaboration"}),"\n",(0,n.jsx)(i.h3,{id:"creator",children:"creator"}),"\n",(0,n.jsxs)(i.p,{children:["The person who initially created the task. The ",(0,n.jsx)(i.code,{children:"creator"})," field is not meant to imply any role other than that person created the task."]}),"\n",(0,n.jsx)(i.h3,{id:"assignee",children:"assignee"}),"\n",(0,n.jsxs)(i.p,{children:["The person who is currently expected to move a task forward to its done stage. Ideally a single task is not ",(0,n.jsx)(i.em,{children:"anticipated"})," to have more than one assignee in its lifecycle (e.g. it a single task should be transferred from design to engineering once the UX/UI design is ready; these should be separate tasks)."]}),"\n",(0,n.jsxs)(i.p,{children:["With regards to RACI",(0,n.jsx)(i.sup,{children:(0,n.jsx)(i.a,{href:"#user-content-fn-raci",id:"user-content-fnref-raci","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),", ",(0,n.jsx)(i.code,{children:"assignee"}),' is both the "responsible" and "accountable" person.']}),"\n",(0,n.jsx)(i.h3,{id:"consultees",children:"consultees"}),"\n",(0,n.jsxs)(i.p,{children:["A list of persons who should provided feedback, advice, and direction when a change is ",(0,n.jsx)(i.em,{children:"being considered"})," regarding the task. See RACI",(0,n.jsx)(i.sup,{children:(0,n.jsx)(i.a,{href:"#user-content-fn-raci",id:"user-content-fnref-raci-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"informees",children:"informees"}),"\n",(0,n.jsxs)(i.p,{children:["A list of persons who want to be notified about significant changes or updates to the task or its definition. They generally should be understood to not have significnt influence on decisions made regarding the task, thus should not be confused with ",(0,n.jsx)(i.a,{href:"#consultees",children:(0,n.jsx)(i.code,{children:"consultees"})}),". See RACI",(0,n.jsx)(i.sup,{children:(0,n.jsx)(i.a,{href:"#user-content-fn-raci",id:"user-content-fnref-raci-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"comments",children:"comments"}),"\n",(0,n.jsx)(i.p,{children:"Anyone should be able to leave comments on a task."}),"\n",(0,n.jsx)(i.p,{children:'It may be helpful to automatically show any role a person has relative to the task along with the comment (e.g. "assignee", "consultee", "informee", "observer", "assignee of dependent task", etc.).'}),"\n",(0,n.jsx)(i.h3,{id:"history",children:"history"}),"\n",(0,n.jsx)(i.p,{children:"Visible timestamped history of the changes and updates made to the task."}),"\n",(0,n.jsx)(i.h2,{id:"roadmap-related",children:"Roadmap related"}),"\n",(0,n.jsx)(i.h3,{id:"priority",children:"priority"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)("span",{className:"badge",children:"P0"}),' - generally a "critical" item that must be addressed as soon as possible, even it the expense of normal operating procedures (i.e. work the weekend, stopping work on other projects altogether, etc.)']}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)("span",{className:"badge",children:"P1"}),' - a "must do" item, that is non-negotiable in terms of completing a high-level task or project']}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)("span",{className:"badge",children:"P2"}),' - a "should do" item that is expected to be done for a higher level task or project to be considered complete, but in case of a need for descoping can be a canidate to drop. P2 tasks generally should only be addressed after all P1 items unless their is an efficiency to doing them earlier. Generally P2 items should not be removed from scope and should be part of a retro if why they were considered P2 but could not be completed.']}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)("span",{className:"badge",children:"P3"}),' - a "would be nice" item that, like P2 items, can be removed from scope if the project needs to be descoped. Generally a completed project will include some but not all P3 items.']}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)("span",{className:"badge",children:"P4"}),' - "minor request". Something that should be completed if possible, but is generally not considered important or worth much discussion or debate. Is essentially a ',(0,n.jsx)(i.code,{children:"P3"})," that is considered very minor and only should be untaken if it can be completed easily."]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)("span",{className:"badge",children:"P5"}),' - "wishlist" tasks that are recorded for the purpose of acknowledging an idea, noting a future direction, or as a reminder of longer-term aspirations ',(0,n.jsx)(i.em,{children:"but"})," should be expected not to be done"]}),"\n",(0,n.jsx)(i.h3,{id:"dependencies",children:"dependencies"}),"\n",(0,n.jsx)(i.p,{children:"Other tasks that must be complete before this task can be completed."}),"\n",(0,n.jsxs)(i.p,{children:["The semantic meaning can be used to determine a Gantt chart or other project timeline analysis (versus generic the ",(0,n.jsx)(i.a,{href:"#links",children:(0,n.jsx)(i.code,{children:"links"})})," field which are intended for communication, not analysis)."]}),"\n",(0,n.jsx)(i.h3,{id:"links",children:"links"}),"\n",(0,n.jsx)(i.p,{children:'Generic links to other tasks. Links made by labeled such as "duplicate of", "follow-up of", etc. These are mostly for informational purposes.'}),"\n",(0,n.jsx)(i.h3,{id:"deadline",children:"deadline"}),"\n",(0,n.jsxs)(i.p,{children:['A "must finish by" date that is agnostic of the effort. A more specific field such as ',(0,n.jsx)(i.a,{href:"#release",children:(0,n.jsx)(i.code,{children:"release"})})," would subsume such a field."]}),"\n",(0,n.jsx)(i.h3,{id:"category",children:"category"}),"\n",(0,n.jsxs)(i.p,{children:["A generic grouping. A task should have a single category. May be considered redundant and ",(0,n.jsx)(i.a,{href:"#project",children:(0,n.jsx)(i.code,{children:"project"})}),", ",(0,n.jsx)(i.a,{href:"#release",children:(0,n.jsx)(i.code,{children:"release"})}),", and ",(0,n.jsx)(i.a,{href:"#subsystem",children:(0,n.jsx)(i.code,{children:"subsystem"})})," are all being used. May be a cause for confusion if the purpose of the field is not well-defined."]}),"\n",(0,n.jsx)(i.h3,{id:"project",children:"project"}),"\n",(0,n.jsxs)(i.p,{children:["A grouping around a particular, on-going or otherwise long-lasting effort. This could also be a ",(0,n.jsx)(i.code,{children:"product"})," field. This is distinct from ",(0,n.jsx)(i.a,{href:"#release",children:(0,n.jsx)(i.code,{children:"release"})})," in that there is no a distinct deadline associated with this categorization."]}),"\n",(0,n.jsxs)(i.p,{children:["Could be handled as a ",(0,n.jsx)(i.a,{href:"#tags",children:(0,n.jsx)(i.code,{children:"tags"})})," value unless the UI/UX has specific semantic knowledge of what a project is."]}),"\n",(0,n.jsx)(i.h3,{id:"milestone",children:"milestone"}),"\n",(0,n.jsx)(i.p,{children:"A specific point in time when a collection of tasks must all be complete. It should represent a point where a cluster of dependencies are addressed and the product or project as a whole does not have visible, partially completed implementations."}),"\n",(0,n.jsxs)(i.p,{children:["Milestones should be ",(0,n.jsx)(i.em,{children:"ordered"})," but do not necessarily have an exact deadline. As such parent tasks may belong to a later milestone than children, but not vice-versa."]}),"\n",(0,n.jsx)(i.h3,{id:"release",children:"release"}),"\n",(0,n.jsx)(i.p,{children:"A grouping attribute that aligns the task to a specific deadline. That deadline is not necessarily the deadline of the individual task, only that the task's own deadline must before or on the deadline of the release."}),"\n",(0,n.jsxs)(i.p,{children:["A ",(0,n.jsx)(i.code,{children:"release"})," is a special case of a ",(0,n.jsx)(i.a,{href:"#milestone",children:(0,n.jsx)(i.code,{children:"milestone"})})," that has a inflexible, specific calendar deadline."]}),"\n",(0,n.jsx)(i.h3,{id:"subsystem",children:"subsystem"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.em,{children:"implementation area"}),' of the task. For example, "Rendering Subsystem" or "Storage Layer" might be components.']}),"\n",(0,n.jsx)(i.p,{children:"Consideration:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Should this be a an attribute rather than a core field?"}),"\n",(0,n.jsx)(i.li,{children:"Are multiple components allowed?"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"estimation-related",children:"Estimation related"}),"\n",(0,n.jsx)(i.h3,{id:"effort",children:"effort"}),"\n",(0,n.jsx)(i.p,{children:"An estimate of how long a task will take."}),"\n",(0,n.jsx)(i.p,{children:'This can get nuanced for larger tasks as a single number may bake in assumptions about the team size that\'s working on it, the fraction of that team\'s time, the expertise of the people working on the task, etc. Is this a "perfect" estimate (imagine everyone is fully focussed and has the expertise to do the work)? Or are these "real" estimates (the calendar time it will take given all the estimators assumptions about the reality around the task)?'}),"\n",(0,n.jsx)(i.p,{children:"If the value bakes in implicit assumptions such as the above, it can require training from users to avoid errors."}),"\n",(0,n.jsx)(i.h3,{id:"confidence",children:"confidence"}),"\n",(0,n.jsx)(i.p,{children:"How much risk is there? Is this a straightforward task that has been done many times and is just a matter of time to complete? Or is this a novel task that might not be possible, might have a poor estimate, might not have the value anticipated?"}),"\n",(0,n.jsx)(i.h3,{id:"reach",children:"reach"}),"\n",(0,n.jsxs)(i.p,{children:["If this task is done, how big will be impacted? Does it affect all users of a product? This is distinct from ",(0,n.jsx)(i.a,{href:"#impact",children:(0,n.jsx)(i.code,{children:"impact"})})," as it should only account for ",(0,n.jsx)(i.em,{children:"how many"})," not ",(0,n.jsx)(i.em,{children:"how much"}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"impact",children:"impact"}),"\n",(0,n.jsxs)(i.p,{children:["What is the value of the task being done? This is distinct from ",(0,n.jsx)(i.a,{href:"#reach",children:(0,n.jsx)(i.code,{children:"reach"})})," as a task that's highly valuable only to a few people is still high impact. This is why ",(0,n.jsx)(i.code,{children:"reach x impact"})," is a better metric for overall importance."]}),"\n",(0,n.jsx)(i.h2,{id:"risk-assessment",children:"Risk assessment"}),"\n",(0,n.jsx)(i.h3,{id:"risk",children:"risk"}),"\n",(0,n.jsxs)(i.p,{children:["A concrete line item of something that could go wrong along with some form of ",(0,n.jsx)(i.strong,{children:"high"}),", ",(0,n.jsx)(i.strong,{children:"medium"}),", ",(0,n.jsx)(i.strong,{children:"low"})," metric. Usually a qualitative metric rather than numeric probability is fine as the intent usually more for planning and communication than quantitative analysis."]}),"\n",(0,n.jsxs)(i.p,{children:["Should be paired with a ",(0,n.jsx)(i.a,{href:"#mitigation",children:(0,n.jsx)(i.code,{children:"mitigation"})})," task to reduce the risk. If it's not worth associating a risk with a mitigation, then arguably it's not worth calling out the risk."]}),"\n",(0,n.jsx)(i.h3,{id:"mitigation",children:"mitigation"}),"\n",(0,n.jsx)(i.p,{children:"A task or set of tasks that are being done to either:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsx)(i.li,{children:"Front-load the risk in the broader project so it will be clear if it is actuated or not"}),"\n",(0,n.jsx)(i.li,{children:"Reduce the cost/impact of the risk if it is actuated"}),"\n"]}),"\n","\n",(0,n.jsxs)(i.section,{"data-footnotes":!0,className:"footnotes",children:[(0,n.jsx)(i.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{id:"user-content-fn-raci",children:["\n",(0,n.jsxs)(i.p,{children:['The "Responsibility Accountability Consulted Informed" (RACI) matrix. See ',(0,n.jsx)(i.a,{href:"https://project-management.com/understanding-responsibility-assignment-matrix-raci-matrix/",children:"What Is a RACI Matrix?"})," for one definition. ",(0,n.jsx)(i.a,{href:"#user-content-fnref-raci","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})," ",(0,n.jsxs)(i.a,{href:"#user-content-fnref-raci-2","data-footnote-backref":"","aria-label":"Back to reference 1-2",className:"data-footnote-backref",children:["\u21a9",(0,n.jsx)(i.sup,{children:"2"})]})," ",(0,n.jsxs)(i.a,{href:"#user-content-fnref-raci-3","data-footnote-backref":"","aria-label":"Back to reference 1-3",className:"data-footnote-backref",children:["\u21a9",(0,n.jsx)(i.sup,{children:"3"})]})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>r,x:()=>o});var n=s(6540);const t={},a=n.createContext(t);function r(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);