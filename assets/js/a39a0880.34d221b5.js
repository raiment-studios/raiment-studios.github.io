"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6229],{9608:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=t(4848),s=t(8453);const a={},o="Engine",l={id:"snowfall/engine",title:"Engine",description:"The engine is a 3D voxel engined tailored to the specific needs of Snowfall. It is intentionally not a fully generalized 3D game engine as the constraints allow the code to be simpler, easier to maintain, and - in some cases - faster.  More elements of the code base can be constant and known to always be true, which leads to simpler logic.",source:"@site/docs/snowfall/700-engine.md",sourceDirName:"snowfall",slug:"/snowfall/engine",permalink:"/docs/snowfall/engine",draft:!1,unlisted:!1,editUrl:"https://github.com/raiment-studios/monorepo/tree/main/projects/raiment-studios/web2/docs/snowfall/700-engine.md",tags:[],version:"current",sidebarPosition:700,frontMatter:{},sidebar:"snowfallSidebar",previous:{title:"Concept art",permalink:"/docs/snowfall/concept-art/"},next:{title:"Introduction",permalink:"/docs/snowfall/tutorial-wgpu-arch/intro"}},r={},d=[{value:"Principles",id:"principles",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Camera",id:"camera",level:3},{value:"Models",id:"models",level:3},{value:"Meshes",id:"meshes",level:3},{value:"Geometry",id:"geometry",level:3},{value:"Materials",id:"materials",level:3},{value:"CameraController",id:"cameracontroller",level:3},{value:"Distributions",id:"distributions",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"engine",children:"Engine"})}),"\n",(0,i.jsx)(n.p,{children:"The engine is a 3D voxel engined tailored to the specific needs of Snowfall. It is intentionally not a fully generalized 3D game engine as the constraints allow the code to be simpler, easier to maintain, and - in some cases - faster.  More elements of the code base can be constant and known to always be true, which leads to simpler logic."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image-20240811103450472",src:t(5122).A+"",width:"1191",height:"796"})}),"\n",(0,i.jsx)(n.h2,{id:"principles",children:"Principles"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Separation of concerns"}),' - the engine emphasizes layers, decoupling, and independence of code. This means more "similar" structures and data copying, but also means parts of the code can be modified more easily without system-wide changes.  As an example: the engine has a intermediate "normalized" 3d format that is independent of both the source format (GLTF, YAML, etc.) and the rendering target (WGPU).']}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(n.h3,{id:"camera",children:"Camera"}),"\n",(0,i.jsx)(n.h3,{id:"models",children:"Models"}),"\n",(0,i.jsx)(n.h3,{id:"meshes",children:"Meshes"}),"\n",(0,i.jsx)(n.h3,{id:"geometry",children:"Geometry"}),"\n",(0,i.jsx)(n.h3,{id:"materials",children:"Materials"}),"\n",(0,i.jsx)(n.h3,{id:"cameracontroller",children:"CameraController"}),"\n",(0,i.jsx)(n.h2,{id:"distributions",children:"Distributions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A distribution is a mod intended to represent a complet game"}),"\n",(0,i.jsx)(n.li,{children:"Structurally a dependency and a mod are almost equivalent"}),"\n",(0,i.jsxs)(n.li,{children:["A mod has a..","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A set of resources (cards, config, etc)"}),"\n",(0,i.jsx)(n.li,{children:"Dependencies on other mods (with versions)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Required mods are automatically downloaded and installed\n*"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"data/\n  dist/\t\t\t\t\t\t\t\t- distributions\n  \tbase/\t\t\t\t\t\t\t- a distribution named base\n  \t\tmodels/\n  \t\tconfig.yaml\n\tmod/\t\t\t\t\t\t\t\t- installed mods that are not part of a distribution\n\tuser_mods.yaml\t\t  - list of explicit mods available for overlay on distributions\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},5122:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-20240811103450472-793e2afc8071e0d3f1fc23f3518814bb.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);